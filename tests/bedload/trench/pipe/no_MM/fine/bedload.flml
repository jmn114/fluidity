<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">bedload</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="/data/phd/fluidity_dev_bedload/tests/bedload/trench/pipe/src/pipe_fine">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <include_in_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <include_in_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">0.05</real_value>
      </constant>
    </dump_period>
    <output_mesh name="VelocityMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">0.1</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">500.0</real_value>
    </finish_time>
    <nonlinear_iterations>
      <integer_value rank="0">2</integer_value>
    </nonlinear_iterations>
    <adaptive_timestep>
      <requested_cfl>
        <real_value rank="0">5.0</real_value>
      </requested_cfl>
      <courant_number name="CFLNumber">
        <mesh name="VelocityMesh"/>
      </courant_number>
      <maximum_timestep>
        <real_value rank="0">0.01</real_value>
      </maximum_timestep>
    </adaptive_timestep>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">10.0</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="CoordinateMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value shape="2" dim1="dim" rank="1">0.0 -1.0</real_value>
            </constant>
          </value>
          <output>
            <exclude_from_vtu/>
          </output>
          <stat>
            <include_in_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="water">
    <equation_of_state>
      <fluids>
        <linear>
          <reference_density>
            <real_value rank="0">1000.0</real_value>
          </reference_density>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <remove_stabilisation_term/>
          </continuous_galerkin>
        </spatial_discretisation>
        <scheme>
          <poisson_pressure_solution>
            <string_value lines="1">never</string_value>
          </poisson_pressure_solution>
          <use_projection_method/>
        </scheme>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="hypre">
            <hypre_type name="boomeramg"/>
          </preconditioner>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <boundary_conditions name="Outflow">
          <surface_ids>
            <integer_value shape="1" rank="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="Boussinesq"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <viscosity_scheme>
              <compact_discontinuous_galerkin/>
              <tensor_form/>
            </viscosity_scheme>
            <advection_scheme>
              <upwind/>
              <project_velocity_to_continuous>
                <mesh name="CoordinateMesh"/>
              </project_velocity_to_continuous>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
            <buoyancy/>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.5</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">0.5</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="Inflow">
          <surface_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <x_component>
                <python>
                  <string_value lines="20" type="code" language="python">def val(X, t):
   UM = 0.5
   H = 4.0
   H0 = 0.00075
   k = 0.42   
   return (((k*UM)/(numpy.log((H + H0)/H0)))/k)*numpy.log((X[1] + H0)/H0)</string_value>
                </python>
              </x_component>
              <y_component>
                <python>
                  <string_value lines="20" type="code" language="python">def val(X, t):
   return 0.0</string_value>
                </python>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="top_rigid_lid">
          <surface_ids>
            <integer_value shape="1" rank="1">2</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="bottom_cyl_ns">
          <surface_ids>
            <integer_value shape="2" rank="1">3 5</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </x_component>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="OutflowNoStress">
          <surface_ids>
            <integer_value shape="1" rank="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <tensor_field name="Viscosity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">1.0e-6</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
          </prescribed>
        </tensor_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
          <compute_body_forces_on_surfaces name="circle">
            <surface_ids>
              <integer_value shape="1" rank="1">5</integer_value>
            </surface_ids>
          </compute_body_forces_on_surfaces>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <galerkin_projection>
          <discontinuous/>
        </galerkin_projection>
      </prognostic>
    </vector_field>
    <scalar_field name="CFLNumber" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="ScourBedloadErosionRate" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="DG_CourantNumber" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="ScourBedloadDepositRate" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="SuspendedRate" rank="0">
      <diagnostic>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="ScourBedloadErosionRate" source_field_2_name="ScourBedloadDepositRate" material_phase_support="single" source_field_1_type="scalar"/>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Vorticity" rank="0">
      <diagnostic>
        <algorithm source_field_type="vector" material_phase_support="single" name="curl_2d" source_field_name="Velocity">
          <lump_mass/>
        </algorithm>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="GeostrophicPressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <geostrophic_pressure_option>
            <string_value>exclude_coriolis</string_value>
          </geostrophic_pressure_option>
        </spatial_discretisation>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="hypre">
            <hypre_type name="boomeramg"/>
          </preconditioner>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <boundary_conditions name="top">
          <surface_ids>
            <integer_value shape="1" rank="1">2</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <no_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="DivBedloadRate" rank="0">
      <diagnostic>
        <algorithm source_field_type="vector" material_phase_support="single" name="surface_horizontal_divergence" source_field_name="BedloadRate">
          <surface_ids>
            <integer_value shape="1" rank="1">3</integer_value>
          </surface_ids>
        </algorithm>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field name="BedShearStress" rank="1">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <density>
          <real_value rank="0">1000.0</real_value>
        </density>
        <calculation_method>
          <velocity_gradient/>
        </calculation_method>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <detectors>
          <include_in_detectors/>
        </detectors>
      </diagnostic>
    </vector_field>
    <vector_field name="BedElevation" rank="1">
      <diagnostic>
        <algorithm name="vector_python_diagnostic" material_phase_support="single">
          <string_value lines="20" type="code" language="python">import numpy as np

B = state.scalar_fields['DivBedloadRate']
S = state.scalar_fields['SuspendedRate']

# set factors for bedload and suspension contributions
S_factor = 0.0
B_factor = 10.0

# assign a mesh velocity based upon results of mesh movement
for j in range(field.node_count):
  T_b = B.node_val(j)
  T_s = S.node_val(j)
  field.set(j, np.array([0.0, -(S_factor * T_s + B_factor * T_b)]))</string_value>
        </algorithm>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <vector_field name="ContVel" rank="1">
      <diagnostic>
        <algorithm source_field_type="vector" material_phase_support="single" name="vector_galerkin_projection" source_field_name="Velocity">
          <solver>
            <iterative_method name="cg"/>
            <preconditioner name="sor"/>
            <relative_error>
              <real_value rank="0">1.0e-7</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
        </algorithm>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <adaptivity_options>
          <absolute_measure>
            <vector_field name="InterpolationErrorBound" rank="1">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value shape="2" dim1="dim" rank="1">1.0e-1 1.0e-1</real_value>
                  </constant>
                </value>
                <output/>
                <stat>
                  <include_in_stat/>
                </stat>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
              </prescribed>
            </vector_field>
            <p_norm>
              <integer_value rank="0">2</integer_value>
            </p_norm>
          </absolute_measure>
        </adaptivity_options>
      </diagnostic>
    </vector_field>
    <vector_field name="BedloadRate" rank="1">
      <diagnostic>
        <algorithm name="vector_python_diagnostic" material_phase_support="single">
          <string_value lines="20" type="code" language="python">import libspud
import numpy

shields_cr = 0.0
d = libspud.get_option("/material_phase::water/sediment/scalar_field::Scour/prognostic/diameter")
R = libspud.get_option("/material_phase::water/sediment/scalar_field::Scour/prognostic/submerged_specific_gravity")
g = libspud.get_option("/physical_parameters/gravity/magnitude")

rho = state.scalar_fields["Density"]
#bss = state.vector_fields["BedShearStress"]
bss = state.vector_fields["BedShearStressAvg"]
X = state.vector_fields["Coordinate"]

field.val[:,:] = 0.0

widths = numpy.zeros(field.node_count)

for i in range(field.element_count):

  cg_nodes = rho.ele_nodes(i)
  dg_nodes = bss.ele_nodes(i)
    
  if (bss.node_val(dg_nodes) == 0).all():    
    continue
 
  boundary_nodes = []

  x_local = X.ele_val(i)

  bad_node = x_local[:,1].argmax()

  x_values = numpy.empty(2)
  x_index_values = []
  
  jj = 0
  for j in range(len(cg_nodes)):
    if j == bad_node:
      continue
    x_values[jj] = x_local[j,0]
    x_index_values.append(j)
    jj += 1

  left  = x_index_values[x_values.argmin()]
  right = x_index_values[x_values.argmax()]
  
  width = (X.node_val(cg_nodes[right])[0] - X.node_val(cg_nodes[left])[0]) / 2.0
  
  widths[cg_nodes[left]] += width
  widths[cg_nodes[right]] += width

  bssm = (bss.node_val(dg_nodes[left])[0] + bss.node_val(dg_nodes[right])[0])/2.0
   
  rhom = (rho.node_val(cg_nodes[left])+rho.node_val(cg_nodes[right]))/2.0
  
  qb = (((R*g*d)**0.5)*d) * 18.74 * ((bssm/(rhom*R*g*d)) - shields_cr) * ((((abs(bssm))/(rhom*R*g*d))**0.5) - (0.7*(shields_cr)**0.5))

  if x_values.min()&gt;0.0 and x_values.max()&lt;2.0:
    field.val[cg_nodes[left],0] += qb*width
  if x_values.max()&lt;2.0:
    field.val[cg_nodes[right],0] += qb*width

for i in range(field.node_count):

  if widths[i] == 0.0:
    continue
  
  field.val[i,0] /= widths[i]</string_value>
        </algorithm>
        <mesh name="CoordinateMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <vector_field name="BedShearStressAvg" rank="1">
      <diagnostic>
        <algorithm source_field_type="vector" material_phase_support="single" name="filter_time_averaged_vector" source_field_name="BedShearStress">
          <tau>
            <real_value rank="0">0.0</real_value>
          </tau>
        </algorithm>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </vector_field>
    <sediment>
      <scalar_field name="Scour" rank="0">
        <prognostic>
          <mesh name="CoordinateMesh"/>
          <equation name="AdvectionDiffusion"/>
          <spatial_discretisation>
            <control_volumes>
              <face_value name="FiniteElement">
                <limit_face_value>
                  <limiter name="Sweby"/>
                </limit_face_value>
              </face_value>
              <diffusion_scheme name="ElementGradient"/>
            </control_volumes>
            <conservative_advection>
              <real_value rank="0">0.0</real_value>
            </conservative_advection>
          </spatial_discretisation>
          <temporal_discretisation>
            <theta>
              <real_value rank="0">0.5</real_value>
            </theta>
            <discontinuous_galerkin>
              <maximum_courant_number_per_subcycle>
                <real_value rank="0">0.25</real_value>
              </maximum_courant_number_per_subcycle>
            </discontinuous_galerkin>
          </temporal_discretisation>
          <solver>
            <iterative_method name="gmres">
              <restart>
                <integer_value rank="0">30</integer_value>
              </restart>
            </iterative_method>
            <preconditioner name="eisenstat"/>
            <relative_error>
              <real_value rank="0">1.0e-7</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">1000</integer_value>
            </max_iterations>
            <never_ignore_solver_failures/>
            <diagnostics>
              <monitors/>
            </diagnostics>
          </solver>
          <initial_condition name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
          <boundary_conditions name="zero_flux">
            <surface_ids>
              <integer_value shape="3" rank="1">1 2 5</integer_value>
            </surface_ids>
            <type name="dirichlet">
              <apply_weakly/>
              <constant>
                <real_value rank="0">0.0</real_value>
              </constant>
            </type>
          </boundary_conditions>
          <boundary_conditions name="seabed">
            <surface_ids>
              <integer_value shape="1" rank="1">3</integer_value>
            </surface_ids>
            <type name="sediment_reentrainment">
              <algorithm>Garcia_1991</algorithm>
            </type>
          </boundary_conditions>
          <tensor_field name="Diffusivity" rank="2">
            <prescribed>
              <value name="WholeMesh">
                <isotropic>
                  <constant>
                    <real_value rank="0">1e-04</real_value>
                  </constant>
                </isotropic>
              </value>
              <output/>
            </prescribed>
          </tensor_field>
          <scalar_field name="SinkingVelocity" rank="0">
            <prescribed>
              <mesh name="VelocityMesh"/>
              <value name="WholeMesh">
                <constant>
                  <real_value rank="0">0.01</real_value>
                </constant>
              </value>
              <output/>
              <stat/>
              <detectors>
                <exclude_from_detectors/>
              </detectors>
            </prescribed>
          </scalar_field>
          <output/>
          <stat/>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
          <galerkin_projection>
            <continuous>
              <solver>
                <iterative_method name="cg"/>
                <preconditioner name="sor"/>
                <relative_error>
                  <real_value rank="0">1.0e-7</real_value>
                </relative_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
            </continuous>
          </galerkin_projection>
          <scalar_field name="Bedload" rank="0">
            <prognostic>
              <surface_ids>
                <integer_value shape="1" rank="1">3</integer_value>
              </surface_ids>
              <equation name="SedimentBedload"/>
              <spatial_discretisation>
                <continuous_galerkin>
                  <stabilisation>
                    <no_stabilisation/>
                  </stabilisation>
                  <advection_terms/>
                  <mass_terms/>
                </continuous_galerkin>
                <conservative_advection>
                  <real_value rank="0">0.0</real_value>
                </conservative_advection>
              </spatial_discretisation>
              <temporal_discretisation>
                <theta>
                  <real_value rank="0">0.5</real_value>
                </theta>
              </temporal_discretisation>
              <solver>
                <iterative_method name="gmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                </iterative_method>
                <preconditioner name="eisenstat"/>
                <relative_error>
                  <real_value rank="0">1.0e-7</real_value>
                </relative_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
              <initial_condition name="WholeMesh">
                <constant>
                  <real_value rank="0">1.0</real_value>
                </constant>
              </initial_condition>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
              <consistent_interpolation/>
            </prognostic>
          </scalar_field>
          <scalar_field name="BedloadVolumeFraction" rank="0">
            <diagnostic>
              <output/>
              <stat>
                <exclude_from_stat/>
              </stat>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <scalar_field name="BedloadDepositRate" rank="0">
            <diagnostic>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <scalar_field name="BedloadErosionRate" rank="0">
            <diagnostic>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
            </diagnostic>
          </scalar_field>
          <submerged_specific_gravity>
            <real_value rank="0">1.65</real_value>
          </submerged_specific_gravity>
          <diameter>
            <real_value rank="0">0.00036</real_value>
          </diameter>
        </prognostic>
      </scalar_field>
      <scalar_field name="SedimentBedActiveLayerD50" rank="0">
        <diagnostic>
          <surface_ids>
            <integer_value shape="1" rank="1">3</integer_value>
          </surface_ids>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat>
            <exclude_from_stat/>
          </stat>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
      <scalar_field name="SedimentBedActiveLayerSigma" rank="0">
        <diagnostic>
          <surface_ids>
            <integer_value shape="1" rank="1">3</integer_value>
          </surface_ids>
          <algorithm name="Internal" material_phase_support="multiple"/>
          <mesh name="CoordinateMesh"/>
          <output/>
          <stat>
            <exclude_from_stat/>
          </stat>
          <convergence>
            <include_in_convergence/>
          </convergence>
          <detectors>
            <include_in_detectors/>
          </detectors>
          <steady_state>
            <include_in_steady_state/>
          </steady_state>
        </diagnostic>
      </scalar_field>
    </sediment>
  </material_phase>
  <mesh_adaptivity>
    <mesh_movement>
      <imposed_grid_velocity/>
      <vector_field name="GridVelocity" rank="1">
        <aliased material_phase_name="water" field_name="BedElevation"/>
      </vector_field>
    </mesh_movement>
  </mesh_adaptivity>
</fluidity_options>
